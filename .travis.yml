# For more information, see https://github.com/hvr/multi-ghc-travis
language: c
sudo: false

git:
  submodules: false  # whether to recursively clone submodules

cache:
  directories:
    - $HOME/.cabal/packages
    - $HOME/.cabal/store

before_cache:
  - rm -fv $HOME/.cabal/packages/hackage.haskell.org/build-reports.log
  # remove files that are regenerated by 'cabal update'
  - rm -fv $HOME/.cabal/packages/hackage.haskell.org/00-index.*
  - rm -fv $HOME/.cabal/packages/hackage.haskell.org/*.json
  - rm -fv $HOME/.cabal/packages/hackage.haskell.org/01-index.cache
  - rm -fv $HOME/.cabal/packages/hackage.haskell.org/01-index.tar
  - rm -fv $HOME/.cabal/packages/hackage.haskell.org/01-index.tar.idx

matrix:
  include:
    #- compiler: "ghc-7.8.4"
    #  env: TEST=--disable-tests BENCH=--disable-benchmarks
    #  addons: {apt: {packages: [ghc-ppa-tools,cabal-install-head,ghc-7.8.4], sources: [hvr-ghc]}}
    - compiler: "ghc-7.10.3"
    # env: TEST=--disable-tests BENCH=--disable-benchmarks
      addons: {apt: {packages: [ghc-ppa-tools,cabal-install-head,ghc-7.10.3], sources: [hvr-ghc]}}
    - compiler: "ghc-8.0.2"
    # env: TEST=--disable-tests BENCH=--disable-benchmarks
      addons: {apt: {packages: [ghc-ppa-tools,cabal-install-head,ghc-8.0.2], sources: [hvr-ghc]}}

before_install:
 - HC=${CC}
 - unset CC
 - PATH=/opt/ghc/bin:/opt/ghc-ppa-tools/bin:$PATH

install:
 - cabal --version
 - echo "$(${HC} --version) [$(${HC} --print-project-git-commit-id 2> /dev/null || echo '?')]"
 - travis_retry cabal update -v
 - sed -i 's/^jobs:/-- jobs:/' ${HOME}/.cabal/config

 - cabal new-build -w ${HC} --enable-tests --dep -j2 all

# Here starts the actual work to be performed for the package under test;
# any command which exits with a non-zero exit code causes the build to fail.
script:
 - cd ziptastic-core/
 - cabal sdist
 - cabal new-build -w ${HC} -j1
 - cabal new-test -w ${HC}
 - cd ..

 - cd ziptastic-client/
 - cabal sdist
 - cabal new-build -w ${HC} -j1
 - cabal new-test -w ${HC}
 - cd ..

# EOF
